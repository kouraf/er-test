version: '2.3'
services:
  app:
    container_name: app
    restart: unless-stopped
    build:
      context: .
      # args: # Passing eventual Proxy env vars to build
      # HTTP_PROXY:  ${HTTP_PROXY}
      # HTTPS_PROXY: ${HTTPS_PROXY}
    ports:
      - '4000:4000'
    links:
      - mongo
    volumes:
      - ${PIPELINES_VOLUME}:${PIPELINES_PATH}
      - ${PIPELINES_CONFIG_VOLUME}:${PIPELINES_CONFIG_PATH}
      - ${ES_CERT_VOLUME}:${ES_CERT}
      - ${UPLOADS_PATH_VOLUME}:${UPLOADS_PATH}
    environment:
      PORT: ${PORT}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB: ${MONGO_DB}
      MONGO_HOSTNAME: ${MONGO_HOSTNAME}
      MONGO_PORT: ${MONGO_PORT}
      ES_USERNAME: ${ES_USERNAME}
      ES_PASSWORD: ${ES_PASSWORD}
      ES_CERT: ${ES_CERT}
      ES_NODES: ${ES_NODES}
      PIPELINES_PATH: ${PIPELINES_PATH}
      PIPELINES_CONFIG_PATH: ${PIPELINES_CONFIG_PATH}
      ES_LOGSTASH_USER: ${ES_LOGSTASH_USER}
      ES_LOGSTASH_PASSWORD: ${ES_LOGSTASH_PASSWORD}
      LOGSTASH_PIPELINES_PATH: ${LOGSTASH_PIPELINES_PATH}
      PIPELINE_CONFIG_SUFFIX: ${PIPELINE_CONFIG_SUFFIX}
      USER_PIPELINE_WORKERS: ${USER_PIPELINE_WORKERS}
      API_BASE_URL: ${API_BASE_URL}
      PREDICT_ENDPOINT: ${PREDICT_ENDPOINT}
      GEO_ENDPOINT: ${GEO_ENDPOINT}
      TOKENS_ENDPOINT: ${TOKENS_ENDPOINT}
      HTTPS_ENABLED: ${HTTPS_ENABLED}
      SSL_VERIFICATION: ${SSL_VERIFICATION}
      CACERT_PATH: ${CACERT_PATH}
      TWITTER_INDEX_TEMPLATE_PATH: ${TWITTER_INDEX_TEMPLATE_PATH}
      TWITTER_INDEX_TEMPLATE_NAME: ${TWITTER_INDEX_TEMPLATE_NAME}
      FACEBOOK_POSTS_TEMPLATE_PATH: ${FACEBOOK_POSTS_TEMPLATE_PATH}
      FACEBOOK_POSTS_TEMPLATE_NAME: ${FACEBOOK_POSTS_TEMPLATE_NAME}
      FACEBOOK_INSIGHTS_TEMPLATE_PATH: ${FACEBOOK_INSIGHTS_TEMPLATE_PATH}
      FACEBOOK_INSIGHTS_TEMPLATE_NAME: ${FACEBOOK_INSIGHTS_TEMPLATE_NAME}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      JWT_SECRET: ${JWT_SECRET}
      GEOCODER: ${GEOCODER}
      GEOCODER_API_KEY: ${GEOCODER_API_KEY}
      MAX_DASHBOARD_SOURCES: ${MAX_DASHBOARD_SOURCES}
      POLARITY_ENDPOINT: ${POLARITY_ENDPOINT}
      AUTH_SOURCE: ${AUTH_SOURCE}
      UPLOADS_PATH: ${UPLOADS_PATH}

    networks:
      - odfe-net

  mongo:
    container_name: mongo
    restart: unless-stopped
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_DB: ${MONGO_DB}
      SUPER_ADMIN_PASSWORD: ${SUPER_ADMIN_PASSWORD}
      SUPER_ADMIN_EMAIL: ${SUPER_ADMIN_EMAIL}
    expose:
      - '27017'
    ports:
      - '27018:27017'
    volumes:
      - ${MONGO_VOLUME}:/data/db
      - ./docker-entrypoint:/docker-entrypoint-initdb.d/
    networks:
      - odfe-net

networks:
  odfe-net:
    external:
      name: odfe-net
